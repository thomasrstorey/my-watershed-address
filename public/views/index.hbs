<!DOCTYPE html>
<html>
<head>
  <meta charset=utf-8 />
  <title>My Florida Watershed Address</title>
  <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
  <script src='https://api.tiles.mapbox.com/mapbox.js/v2.1.5/mapbox.js'></script>
  <script src='https://api.tiles.mapbox.com/mapbox.js/plugins/leaflet-pip/v0.0.2/leaflet-pip.js'></script>
  <link href='https://api.tiles.mapbox.com/mapbox.js/v2.1.5/mapbox.css' rel='stylesheet' />
  <link href='../css/style.css' rel='stylesheet' />
  <style>
    body { margin:0; padding:0; }
    #map { position:absolute; top:0; bottom:0; width:100%; }
  </style>
</head>
<body>

<script src="../js/lodash.min.js"></script>
<script src="../js/config.js"></script>
<script src="../js/polygons.js"></script>

<div id="filters"></div>

<div id='map'></div>

<script>
L.mapbox.accessToken = mapboxConfig.accessToken;
var map = L.mapbox.map('map', 'examples.map-i86nkdio', {
  attributionControl: false,
  infoControl: true
}) // TO DO: replace with custom map
    .setView([29.6, -82.3], 8);

var tiles = {
  'Sub-Region'   : L.mapbox.tileLayer('trstorey.fbd7m9ig'),
  'Basin'        : L.mapbox.tileLayer('trstorey.Basin'),
  'Sub-Basin'    : L.mapbox.tileLayer('trstorey.Sub-Basin'),
  'Watershed'    : L.mapbox.tileLayer('trstorey.Watershed'),
  'Sub-Watershed': L.mapbox.tileLayer('trstorey.Sub-Watershed')
};

var grids = {
  'Sub-Region'   : L.mapbox.gridLayer('trstorey.fbd7m9ig'),
  'Basin'        : L.mapbox.gridLayer('trstorey.Basin'),
  'Sub-Basin'    : L.mapbox.gridLayer('trstorey.Sub-Basin'),
  'Watershed'    : L.mapbox.gridLayer('trstorey.Watershed'),
  'Sub-Watershed': L.mapbox.gridLayer('trstorey.Sub-Watershed')
};

var ctrls = {
  'Sub-Region' : undefined,
  'Basin'      : undefined,
  'Sub-Basin'  : undefined,
  'Watershed'  : undefined,
  'Sub-Watershed': undefined
}

L.control.layers({}, tiles).addTo(map);

map.on('overlayadd', function (e) {
  var gridData = _.find(grids, function (v, k) { return k === e.name; } );
  ctrls[e.name] = L.mapbox.gridControl(gridData);
  map.addLayer(gridData);
});

map.on('overlayremove', function (e) {
  var gridData = _.find(grids, function (v, k) { return k === e.name; } );
  map.removeLayer(gridData);
});

map.on('click', function (e) {
  var popup = L.popup()
  .setLatLng(e.latlng)
  .setContent("Watershed Address: ")
  .openOn(map);
  _.forEach(grids, function (g, k) {
    (function (g, k) {
      g.getData(e.latlng, function (data) {
       var content = popup.getContent() + data.NAME + " " + k;
        if(k != "Sub-Watershed") {
          content += " > ";
        }
        popup.setContent(content);
        popup.update();
      });
    })(g, k);
  });
});

// Initialize the geocoder control and add it to the map.
var geocoderControl = L.mapbox.geocoderControl('mapbox.places');
geocoderControl.addTo(map);

// Listen for the `found` result and display the first result
// in the output container. For all available events, see
// https://www.mapbox.com/mapbox.js/api/v2.1.5/l-mapbox-geocodercontrol/#section-geocodercontrol-on
geocoderControl.on('found', function(res) {
  var ll = res.results.features[0].center;
  _(ll).reverse().value();
   var popup = L.popup()
  .setLatLng(ll)
  .setContent("Watershed Address: ")
  .openOn(map);
   _.forEach(grids, function (g, k) {
    (function (g, k) {
      g.getData(L.latLng(ll[0], ll[1]), function (data) {
        var content = popup.getContent() + data.NAME + " " + k;
        if(k != "Sub-Watershed") {
          content += " > ";
        }
        popup.setContent(content);
        popup.update();
      });
    })(g, k);
  });
});

</script>


</body>
</html>

